{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n\nconst input = document.querySelector('#search-input');\nconst button = document.querySelector('#search-button');\nconst form = document.querySelector('#search-form');\nconst urlBase = 'http://api.tvmaze.com/search/shows?q=';\nconst elementUl = document.querySelector('#series-list');\nconst favUl = document.querySelector('#fav-list');\nconst resetButton = document.querySelector('#reset-button');\n\nlet favourites;\n\n//Función para conectarnos y obtener la información que queremos de la api\nfunction getInfo(){\n  //console.log('holi');\n  const name = input.value.toLowerCase();\n  fetch(urlBase + name)\n    .then(response => response.json())\n    .then(data => displayShow(data));\n  //Función para pintar los datos que nos llegan de la api\n  const displayShow = (data) => {\n    elementUl.innerHTML = '';\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      console.log('estoy en función displayShow', item);\n      const showItem = item.show;\n      const showTitle = showItem.name;\n      const showImages = showItem.image;\n      \n      //Creo los elementos del DOM que son necesarios para mostrar los elementos de la lista\n      const elementImg = document.createElement('img');\n      const elementName = document.createElement('h2');\n      const elementLi = document.createElement('li');\n      const nameText = document.createTextNode(showTitle);\n      elementLi.classList.add('nofavourite');\n      //Cada elemento que devuelve el buscador se mostrará en un \"li\" \n      //que, mediante js, incluiremos dentro del \"ul\" vacío que hay en el html.\n      \n      elementName.appendChild(nameText);\n      elementLi.appendChild(elementName);\n      elementLi.appendChild(elementImg);\n      elementUl.appendChild(elementLi);\n      \n      //listener para ejecutar función de elementos favoritos\n      elementLi.addEventListener('click', function(event) { //añado un listener al elemento li para que se ejecuten funciones posteriores        const showImage = showImages.medium;\n        const showImage = showImages ? showImages.medium : 'https://via.placeholder.com/210x295/ffffff/666666/?text=TV';\n        favShow(elementLi, showTitle, showImage);\n      }); //estos parámetros se los pasa a la funcion favshow\n\n      //Cuando el resultado de la búsqueda no tiene imagen para mostrar, le asignamos una mediante el servicio placeholder.com\n      if (showImages === null) {\n        elementImg.setAttribute('src','https://via.placeholder.com/210x295/ffffff/666666/?text=TV');\n      }else if (showImages !== null) {\n        const showImage = showImages.medium;\n        elementImg.setAttribute('src', showImage);\n      }\n    }\n  }\n}\n//Defino función para añadir series a la lista de favoritas\nfunction favShow (element, name, image){\n  console.log('holi');\n  //añadiendo y borrando clases de css se definen los elementos que formarán parte de \"favourites\"\n  if (element.classList.contains('nofavourite')){\n    element.classList.remove('nofavourite');\n    element.classList.add('favourite');\n  } else {\n    element.classList.remove('favourite');\n    element.classList.add('nofavourite');\n  }\n  //determino que elementos formarán parte del array de favoritos\n  if (element.classList.contains('favourite')) {\n    const object = {\n      title: name,\n      pic: image\n    };\n    console.log(object);\n    favourites.push(object);\n  }\n  //creo los elementos necesarios para pintar las series favoritas\n  const imageFav = document.createElement('img');\n  imageFav.setAttribute('src', image);\n  const nameFav = document.createElement('h2');\n  const liFav = document.createElement('li');\n  const textFav = document.createTextNode(name);\n  nameFav.appendChild(textFav);\n  liFav.appendChild(nameFav);\n  liFav.appendChild(imageFav);\n  favUl.appendChild(liFav);\n\n  //Añado elementos a localStorage\n  localStorage.setItem('favs', JSON.stringify(favourites));\n}\n\n//LocalStorage \n//Defino una función para pintar los datos guardados en LocalStorage y la ejecuto cuando se carga la página\nfunction showLocal(){\n  if (localStorage.getItem('favs') !== null) {\n    favourites = JSON.parse(localStorage.getItem('favs'));\n    console.log(favourites)\n    for (const item of favourites){\n      let elementLiLocal = document.createElement('li');\n      let elementNameLocal = document.createElement('h2');\n      let elementImageLocal = document.createElement('img');\n      elementImageLocal.src = item.pic;\n      let elementTextName = document.createTextNode(item.title);\n      elementNameLocal.appendChild(elementTextName);\n      elementLiLocal.appendChild(elementNameLocal);\n      elementLiLocal.appendChild(elementImageLocal);\n      favUl.appendChild(elementLiLocal);\n    }\n  } else {\n    favourites = [];\n  }\n}\n\n//Habilitar botón reset que vacía la lista de favoritas\n\nfunction reset(){\n  console.log('función reset');\n  favUl.innerHTML = '';\n  localStorage.removeItem('favs');\n}\n\nresetButton.addEventListener('click', reset);\n\n//Función para habilitar tecla enter\n\nfunction submitHandler(event){\n  event.preventDefault(); //para que no se recargue la página por defecto\n  getInfo(); //la función que he definido al principio para obtener datos\n}\nform.addEventListener('submit', submitHandler);\nbutton.addEventListener('click', getInfo);\nwindow.addEventListener('load', showLocal);"]}